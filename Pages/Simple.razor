@page "/simple"
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using TAISEN.Classes;

<PageTitle>SIMPLE</PageTitle>

<h1>Methode SIMPLE</h1>
<p class="sh1">L'objectif de cette méthode est de faire progresser significativement le niveau de sécurité d'un projet en moins de 2 mois</p>


<h2>Périmètre</h2>
<span class="oi oi-crop" aria-hidden="true"></span>
<div class="bgDiv"> 
    <p>Le champ de cette méthodologie cible les projets applicatifs ainsi que l'infrastructure sur laquelle ils reposent, ce qui inclut:</p>
    <ul>
        <li>toute application métier, qu'il s'agisse d'un environnement  Web, industriel, IoT, cloud, hybride, etc.</li>
        <li>le middleware, les librairies, les dépendances et les composants tiers</li>
        <li>les composants du système d’exploitation, des microservices, ainsi que leur orchestration</li>
    </ul>
</div>

@if (GetEtapes == null)
{
        <p><em>Chargement...</em></p>
}
else
{

     
    <h2>Référentiels</h2>
    <span class="oi oi-compass" aria-hidden="true"></span><br />
    <div class="bgDiv"> 
    @foreach(SEtape E in GetEtapes){
        @foreach(Atelier A in E.Ateliers){
            TotalPoids += A.Poids;
            @foreach(Processus P in A.Processus)
            {
                @if(P.Referentiel != null){
                    <a href="@P.Referentiel.Uri">@P.Referentiel.Nom</a><br />
                }
            }
        }
    }
    </div>


    <h2>Étapes</h2>
    <span class="oi oi-key" aria-hidden="true"></span>
    <div class="bgDiv">
        <ul>
        @foreach( SEtape E in GetEtapes)
        {
            <li><b>@E.Etape.FirstOrDefault()</b> :  @E.Etape</li>
        }
        </ul>
    </div>

    <h2>Ateliers</h2>
    <span class="oi oi-layers" aria-hidden="true"></span>
    <div class="bgDiv">
        <table class="table">
            <thead>
                <tr>
                    <th>Atelier</th>
                    <th>Déscription</th>
                    <th>Poids</th>
                </tr>
            </thead>
            <tbody>
                @foreach( SEtape E in GetEtapes)
                    @foreach( Atelier A in E.Ateliers)
                    {
                        <tr>
                            <td>@A.Nom</td>
                            <td>@A.Description</td>
                            <td>@A.Poids</td>
                        </tr>
                    }
            </tbody>
        </table>
    </div>
    <a>Soit un poids total de @TotalPoids jours</a>
}

<form>
    <a href="/simple-demo">
        <input type="button" class="button" value="Démarrer un accompagnement">
    </a>
</form>

<h3>Vous utilisez la Methode SIMPLE ?</h3>
<span class="oi oi-heart" aria-hidden="true"></span>
<div class="bgDiv">
    <a>Le temps nécessaire pour le développement et l'amélioration continue de la méthode SIMPLE est pris sur mon temps libre. J'ai tenu à ce que ce projet soit gratuit et open-source, pour que chacun puisse l'utiliser. 
        Si vous appréciez la plus-value qu'apporte cette méthode au quotidien, n'hésitez pas à faire un don sur ce wallet </a>
    <a href="https://etherscan.io/address/0xcC424e30Ff6eEAb4E6B3A900c5446038F858b314">Ethereum</a>
</div>

<h3>Licence</h3>
<span class="oi oi-badge" aria-hidden="true"></span>
<div>
    <a>GPL-3.0 license</a>
</div>


@code{
    private SEtape[]? GetEtapes;
    private int TotalPoids = 0;
    protected override async Task OnInitializedAsync()
    {
        GetEtapes = await Http.GetFromJsonAsync<SEtape[]>("/Data/SIMPLE.json");
    }
}
