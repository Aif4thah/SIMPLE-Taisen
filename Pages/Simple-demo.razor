@page "/simple-demo"
@inject HttpClient Http

<PageTitle>SIMPLE</PageTitle>

<h1>Methode SIMPLE</h1>

<p class="sh1">Présentation</p>

<img class="img" src="Images/metro.png" alt="--">

<h2>Objectif</h2>
<span class="oi oi-target" aria-hidden="true"></span>
<p>Amener le niveau de sécurité d'un projet à maturité en 40 jours ouvrés</p>

<h2>Référentiels</h2>
<span class="oi oi-compass" aria-hidden="true"></span>
<div class="bgDiv">
    <a href="(https://www.ssi.gouv.fr/uploads/2018/11/guide-securite-numerique-agile-anssi-pa-v1.pdf">ANSSI: Sécurité & Agilité numériques</a><br />
    <a href="(https://owasp.org/www-project-application-security-verification-standard/">OWASP: Application Security Vérification Standard</a><br />
    <a href="(https://social.technet.microsoft.com/wiki/contents/articles/51078.comprendre-le-modele-stride-fr-fr.aspx">Microsoft: STRIDE</a><br />
</div>

<h2>Périmètre</h2>
<span class="oi oi-crop" aria-hidden="true"></span>
<p>Le champ de cette méthodologie cible les projets applicatifs, et en particulier:</p>
<ul>
    <li>les applications métiers, qu'il s'agisse d'application Web, industrielle ou IoT… </li>
    <li>le middleware, les librairies, les dépendances et les composants tiers</li>
    <li>les composants du système d’exploitation des microservices, ainsi que leur orchestration</li>
</ul>


@if (GetEtapes == null)
{
        <p><em>Chargement...</em></p>
}
else
{
    <h2>Synthèse</h2>
    <div class="bgDiv">
    <table class="table">
        <thead>
            <tr>
                <th>Etape</th>
                <th>Atelier</th>
                <th>Poids</th>
            </tr>
        </thead>
        <tbody>
            @foreach( SEtape E in GetEtapes)
                @foreach( Atelier A in E.Ateliers)
                {
                    <tr>
                        <td>@E.Etape</td>
                        <td>@A.Nom</td>
                        <td>@A.Poids</td>
                    </tr>
                }
        </tbody>
    </table>
    <a>Soit un poids total de @TotalPoids jours</a>
    </div>

    @foreach( SEtape E in GetEtapes)
    {
        <h2>@E.Etape</h2>
        <span class="oi oi-map-marker" aria-hidden="true"></span>
        <div class="bgDiv">
            <p>@E.Objectif</p>
        </div>

        @foreach( Atelier A in E.Ateliers)
        {
            <h3>@A.Nom</h3>
            <span class="oi oi-code" aria-hidden="true"></span><br />
            @if(@A.Prerequis != null){<a>Prérequis : @A.Prerequis</a> <br/>}
            <a>Poids : @A.Poids</a>

            <h4>Processus</h4>
            <ul>
            @foreach(string p in A.Processus){ <li>@p</li> }
            </ul>

            <h4>Livrables</h4>
            <ul>
            @foreach (string l in A.Livrables){<li>@l</li> }
            </ul>
        }
    }

}
<h3>Licence</h3>
<span class="oi oi-badge" aria-hidden="true"></span>
    <div class="bgDiv">
        <a>GPL-3.0 license</a>
    </div>

@code {
    private SEtape[]? GetEtapes;
    private int TotalPoids = 0;

    protected override async Task OnInitializedAsync()
    {

        GetEtapes = await Http.GetFromJsonAsync<SEtape[]>("/Data/SIMPLE.json");
        @foreach(SEtape E in GetEtapes)
            @foreach(Atelier A in E.Ateliers)
                TotalPoids += A.Poids;

    }

    public class SEtape
    {
        public string Etape { get; set; }
        public string Objectif { get; set; }
        public  IEnumerable<Atelier> Ateliers { get; set; }
    }

    public class Atelier
    {
        public string Nom { get; set; }
        public string ?Prerequis { get; set; }
        public int Poids { get; set; }
        public  IEnumerable<string> Processus { get; set; }
        public  IEnumerable<string> Livrables { get; set; }
    }
}
