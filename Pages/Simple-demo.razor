@page "/simple-demo/{IEtape:int?}"
@layout SimpleLayout
@inject HttpClient Http
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@using TAISEN.Classes;

<PageTitle>SIMPLE</PageTitle>
<h1>Démonstration</h1>
<p><i>les sections suivantes sont en cours de développement. Elles présentent le détail de la méthode et les
        fonctionnalités qui lui seront prochainement associées</i></p>


@if (GetEtapes == null)
{
    <p><em>Chargement...</em></p>
}
else
{
    E = GetEtapes[IEtape % GetEtapes.Count()];

    <h2>@E?.Etape</h2>
    <span class="oi oi-briefcase" aria-hidden="true"></span>
    <p>@E?.Objectif</p>

    @foreach (Atelier A in E.Ateliers)
    {
        <div class="bgDiv">
            <h3><b>@A.Nom</b><br>@A.Description</h3>
            <span class="oi oi-clipboard" aria-hidden="true"></span><br>
            <ul>
                <li><b>Poids :</b> @A.Poids</li>
                <li><b>Nombre de Processus :</b> @A.Processus.Count()</li>
                @if (@A.Prerequis != null)
                {
                    <li><b>Prérequis :</b> @A.Prerequis</li>
                }

                @if (@A.Interlocuteurs != null)
                {
                    string Tous = string.Empty;
                    bool first = true;
                    @foreach (string I in A.Interlocuteurs)
                    {
                        @if (first)
                        {
                            Tous += I;
                            first = false;
                        }
                        else
                        {
                            Tous += ", " + I;
                        }
                    }
                    <li><b>Interlocuteurs :</b> @Tous</li>
                }

                @foreach (Processus P in A.Processus)
                {
                    @if (@P.Referentiel != null)
                    {
                        <li><b>Referentiel :</b> @P.Referentiel.Nom</li>
                    }
                }
            </ul>


            <fieldset>
                @foreach (Processus P in A.Processus)
                {
                    <legend>@P.Nom</legend>


                    @foreach (Livrable L in P.Livrables)
                    {
                        <a>@L.Nom :</a>
                        <form>
                            <textarea @bind=@L.CR></textarea>
                        </form>
                    }

                    <ul>
                        <li>
                            <input class="CheckBox" type="checkbox" @bind=@P.Fin name=@P.Nom value=@P.Nom />
                            <label for=@P.Nom>Réalisé</label>
                        </li>
                    </ul>
                    <br>
                }
            </fieldset>

        </div>
    }
    <form>
        @if ((IEtape % GetEtapes.Count()) != 0)
        {
            <a href="/simple-demo/@((IEtape-1))"><input type="button" class="button" value="< Etape précèdente"></a>
        }
        <button class="button" @onclick="Save">Sauvegarder l'atelier</button>
        @if ((IEtape % GetEtapes.Count()) != GetEtapes.Count() - 1)
        {
            <a href="/simple-demo/@((IEtape+1))"><input type="button" class="button" value="Etape Suivante >"></a>
        }
    </form>

}


@code {
    [Parameter]
    public int IEtape { get; set; } = 0;
    private SEtape[]? GetEtapes;
    private SEtape? E;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            GetEtapes = await localStorage.GetItemAsync<SEtape[]>("SIMPLE");
            @foreach (SEtape E in GetEtapes)
            {
                @foreach (Atelier A in E.Ateliers)
                {
                    Console.WriteLine("Load from browser\nAtelier: {0}\nPoids: {1}", A.Nom, A.Poids.ToString());
                    @foreach (Processus P in A.Processus)
                        Console.WriteLine("Load from browser\nProcessus: {0}\nFin: {1}", P.Nom, P.Fin);
                }
            }
        }
        catch
        {
            GetEtapes = await Http.GetFromJsonAsync<SEtape[]>("/Data/SIMPLE.json");
        }

    }

    public async Task Save()
    {
        await localStorage.SetItemAsync("SIMPLE", GetEtapes);
    }

}
